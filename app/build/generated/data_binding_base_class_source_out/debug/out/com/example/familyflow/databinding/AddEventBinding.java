// Generated by view binder compiler. Do not edit!
package com.example.familyflow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.familyflow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddEventBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView TextDate;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final Button button;

  @NonNull
  public final TextView editTextDate;

  @NonNull
  public final EditText editTextView;

  @NonNull
  public final TextView textView;

  @NonNull
  public final View view;

  private AddEventBinding(@NonNull LinearLayout rootView, @NonNull TextView TextDate,
      @NonNull ImageButton backButton, @NonNull Button button, @NonNull TextView editTextDate,
      @NonNull EditText editTextView, @NonNull TextView textView, @NonNull View view) {
    this.rootView = rootView;
    this.TextDate = TextDate;
    this.backButton = backButton;
    this.button = button;
    this.editTextDate = editTextDate;
    this.editTextView = editTextView;
    this.textView = textView;
    this.view = view;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TextDate;
      TextView TextDate = ViewBindings.findChildViewById(rootView, id);
      if (TextDate == null) {
        break missingId;
      }

      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.editTextDate;
      TextView editTextDate = ViewBindings.findChildViewById(rootView, id);
      if (editTextDate == null) {
        break missingId;
      }

      id = R.id.editTextView;
      EditText editTextView = ViewBindings.findChildViewById(rootView, id);
      if (editTextView == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new AddEventBinding((LinearLayout) rootView, TextDate, backButton, button,
          editTextDate, editTextView, textView, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
